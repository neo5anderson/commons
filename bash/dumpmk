#!/bin/bash
# 生成 Android 所需的 makefiles
#
#   dumpmk
#

script_name=`basename $0`

folder=$1

if [ ! -z $folder ]; then
    if [ -f $folder ]; then
        echo "usage: $script_name [target_folder [slient_nocover]]"
        exit 1
    fi

    if [ ! -d $folder ]; then
        mkdir -p $folder
    fi
else
    folder='.'
fi

make_file="${folder}/Android.mk"
app_file="${folder}/Application.mk"

exit_code=0

if [ -f $app_file ]; then
    if [ -z $2 ]; then
        echo "$app_file has existed, dump into Application.txt"
    fi
    app_file="${folder}/Applicatin.txt"
    exit_code=1
fi

if [ -f $make_file ]; then
    if [ -z $2 ]; then
        echo "$make_file has existed, dump into Android.txt"
    fi
    make_file="${folder}/Android.txt"
    exit_code=1
fi

if [ ! -z $2 ]; then
    if [ $exit_code -gt 0 ]; then
        exit $exit_code
    fi
fi

cat > $app_file <<APPLICATION_MK
# Generated by Neo

# abis: armeabi armeabi-v7a x86 mips all
APP_ABI := armeabi
# platforms: android-9 android-14 android-21 ...
# APP_PLATFORM := android-9

# APP_STL := stlport_static 
# APP_CPPFLAGS := -fexceptions

APPLICATION_MK

cat > $make_file <<ANDROID_MK
# Generated by Neo

LOCAL_PATH := \$(call my-dir)

FULL_BUILD := 1

KEEP_WARN := -Wall -Wextra
# KEEP_WARN += -Wfloat-equal
IGNORE_WARN := -Wno-unused-function -Wno-unused-parameter -Wno-unused-label
IGNORE_WARN += -Wno-unused-variable -Wno-unused-but-set-variable
IGNORE_WARN += -Wno-write-strings -Wno-strict-aliasing
IGNORE_WARN += -Wno-missing-field-initializers

WARNS := \$(KEEP_WARN)
WARNS += \$(IGNORE_WARN)

KEYS := NEO
ifndef KEYS
    \$(error "without key")
endif

# include \$(CLEAR_VARS)
# LOCAL_MODULE := shared
# LOCAL_SRC_FILES := libs/\$(APP_ABI)/libshared.so
# include \$(PREBUILT_SHARED_LIBRARY)

# include \$(CLEAR_VARS)
# LOCAL_MODULE := static
# LOCAL_SRC_FILES := libs/\$(APP_ABI)/libstatic.a
# include \$(PREBUILT_STATIC_LIBRARY)

include \$(CLEAR_VARS)
LOCAL_MODULE := jni
ifeq (1, \$(DEBUG_PLAYER))
    SRC_FILES := \$(wildcard \$(LOCAL_PATH)/*.cc)
    SRC_FILES += \$(wildcard \$(LOCAL_PATH)/sub_folder/*.cc)
    SRC_FILES := \$(SRC_FILES:\$(LOCAL_PATH)/%=%)
    LOCAL_SRC_FILES := \$(SRC_FILES)

    LOCAL_CFLAGS := -DTRY_DEFINES
    LOCAL_CFLAGS += \$(WARNS)
    LOCAL_CPPFLAGS := \$(LOCAL_CFLAGS)

    LOCAL_C_INCLUDES := \$(LOCAL_PATH)/includes
    # LOCAL_SHARED_LIBRARIES := shared
    # LOCAL_STATIC_LIBRARIES := static

    LOCAL_LDLIBS := -llog
    # LOCAL_LDFLAGS := -L/path/to/customed/lib
    # LOCAL_LDLIBS += -lcustomed

    include \$(BUILD_SHARED_LIBRARY)
    # include \$(BUILD_STATIC_LIBRARY)
else
    LOCAL_SRC_FILES := \$(LOCAL_PATH)/libs/\$(APP_ABI)/libjni.so
    include \$(PREBUILT_SHARED_LIBRARY)
    # include \$(PREBUILT_STATIC_LIBRARY)
endif

ANDROID_MK

exit $exit_code

