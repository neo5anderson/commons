// Generated by Neo

#include <commons/commons.h>

#include <string.h>

#include <sys/select.h>
#include <sys/time.h>

namespace commons {
#ifdef _COCOA_PLATFORM_
#include <sys/fcntl.h>
const int kSemMode = 0644;
const int kSemValue = 0;
const int kSemFlag = O_CREAT | O_EXCL;
#endif /* _COCOA_PLATFORM_ */

uint64_t current_ts() {
    uint64_t result = 0ULL;

    struct timeval t;
    gettimeofday(&t, nullptr);
    result = static_cast<uint64_t>(t.tv_sec) * 1000 + t.tv_usec / 1000;

    return result;
}
void msleep(size_t millis) {
    if (millis > 0) {
        struct timeval t;
        t.tv_sec = millis / 1000;
        t.tv_usec = (millis % 1000) * 1000;
        select(0, nullptr, nullptr, nullptr, &t);
    }
}

char* cat(const char* pre, const char* sub) {
    size_t psize = (nullptr != pre) ? strlen(pre) : 0L;
    size_t ssize = (nullptr != sub) ? strlen(sub) : 0L;
    char* result = nullptr;

    if (psize + ssize > 0L) {
        result = new char[psize + ssize + 1];

        if (psize > 0L) {
            memcpy(result, pre, psize);
        }

        if (ssize > 0L) {
            memcpy(result + psize, sub, ssize);
        }

        result[psize + ssize] = '\0';
    }

    return result;
}
} /* namespace: commons */
