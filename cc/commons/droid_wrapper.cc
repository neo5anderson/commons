// Generated by Neo

#ifdef _ANDROID_PLATFORM_

#include <commons/droid_wrapper.h>

#include <pthread.h>

namespace commons {
JavaVM* g_vm = nullptr;

JNIEXPORT jint JNI_OnLoad(JavaVM* vm, void* reserved) {
    g_vm = vm;
    return JNI_VERSION_1_6;
}

void JNI_OnUnload(JavaVM* vm, void* reserved) {}

JNIEnv* gen_attached_env(JavaVM* jvm, jint version, jboolean* need_detach) {
    JNIEnv* env = nullptr;
    *need_detach = JNI_FALSE;

    if (nullptr != jvm) {
        bool is_attached = false;
        jint result = jvm->GetEnv((void**)&env, version);

        switch (result) {
            case JNI_OK:
                is_attached = true;
                break;

            case JNI_EDETACHED:
                // [Neo] new attached
                if (JNI_OK == jvm->AttachCurrentThread(&env, nullptr)) {
                    is_attached = true;
                    *need_detach = JNI_TRUE;
                }
                break;

            // [Neo] generic error
            case JNI_ERR:
            // [Neo] bad version
            case JNI_EVERSION:
            default:
                LOGE("[%p] %s: GetEnv = %d!!", LOCATE_PT, result);
                break;
        }

        if (false == is_attached) {
            env = nullptr;
        }
    } else {
        LOGE("[%p] %s: jvm = nullptr!!", LOCATE_PT);
    }

    return (JNIEnv*)env;
}
} /* namespace: commons */

#endif /* _ANDROID_PLATFORM_ */
