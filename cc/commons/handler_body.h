// Generated by Neo

#ifndef _COMMONS_HANDLER_BODY_H_
#define _COMMONS_HANDLER_BODY_H_

#include <commons/defines.h>

#ifdef _POSIX_
#include <pthread.h>
#else
#error without macro `_POSIX_`
#endif

namespace commons {
class Buddy;
class Handler;
class Message;

template <typename T>
class BlockedQueue;

class HandlerBody {
   public:
    HandlerBody(Handler* parent);
    ~HandlerBody();

    bool send(int what, int arg1, int arg2, void* obj) const;

   private:
    Handler* parent_;

    Buddy* buddy_;
    Message* msg_pool_;
    friend void clean_msg_buddy(int offset, void* user);

    bool is_working_;
    BlockedQueue<Message>* queue_;

    pthread_t pid_;
    friend void* handleLoop(void* handle);

    ONLY_CUSTOM_CONSTRUCTION(HandlerBody);
};
} /* namespace: commons */

#endif /* _COMMONS_HANDLER_BODY_H_ */
