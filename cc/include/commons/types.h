// Generated by Neo

#ifndef _COMMONS_TYPES_H_
#define _COMMONS_TYPES_H_

#include <stdint.h>
#include <stdlib.h>

namespace commons {
typedef enum _buddy_bad_result {
    kBuddyAllocFailed = -1,
    kBuddySizeBadOffset = -2,
    kBuddySizeUnallocated = -3,
} BuddyBadResult;

typedef void (*blocked_queue_clean_cb)(void* item);

typedef void (*buddy_clean_cb)(void* user, int offset);

typedef void* (*pile_buffer_cb)(void* user, const void* data, size_t capacity,
                                const void* additional);

class RingQueue;
typedef void (*ring_queue_cb)(void* user, RingQueue* queue, void* data);

} /* namespace: commons */

#endif /* _COMMONS_TYPES_H_ */
